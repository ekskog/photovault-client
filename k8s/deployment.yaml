apiVersion: apps/v1
kind: Deployment
metadata:
  name: photovault-vue
  namespace: webapps
  labels:
    app: photovault-vue
    component: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: photovault-vue
  template:
    metadata:
      labels:
        app: photovault-vue
        component: frontend
      annotations:
        # This annotation will be updated by the CI/CD pipeline to force pod recreation
        deployment.kubernetes.io/revision: "1"
    spec:
      containers:
      - name: photovault-vue
        image: ghcr.io/ekskog/photovault-vue:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        # Load environment variables from Kubernetes Secret
        - name: VITE_API_URL
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_API_URL
        - name: VITE_DEMO_MODE
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_DEMO_MODE
        - name: VITE_DEMO_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_DEMO_ADMIN_USERNAME
        - name: VITE_DEMO_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_DEMO_ADMIN_PASSWORD
        - name: VITE_DEMO_USER_USERNAME
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_DEMO_USER_USERNAME
        - name: VITE_DEMO_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: photovault-frontend-secrets
              key: VITE_DEMO_USER_PASSWORD
        # Load non-sensitive config from ConfigMap
        envFrom:
        - configMapRef:
            name: photovault-frontend-config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            httpHeaders:
            - name: User-Agent
              value: "k8s-healthcheck"
          initialDelaySeconds: 30
          periodSeconds: 300
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
            httpHeaders:
            - name: User-Agent
              value: "k8s-healthcheck"
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
