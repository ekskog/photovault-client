name: Build and Deploy Vue App

on:
  push:
    branches:
      - main
    paths:
      - '**/*.ts'
      - '**/*.js'
      - '**/*.vue'
      - '**/*.json'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vite.config.*'
      - 'src/**'
      - 'public/**'
      - 'k8s/**'
      - '.github/workflows/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      source_changed: ${{ steps.filter.outputs.source }}
      manifests_changed: ${{ steps.filter.outputs.manifests }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            source:
              - '**/*.ts'
              - '**/*.js'
              - '**/*.vue'
              - '**/*.json'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'vite.config.*'
              - 'src/**'
              - 'public/**'
            manifests:
              - 'k8s/**'

  build-and-push-image:
    needs: detect-changes
    if: needs.detect-changes.outputs.source_changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      image_updated: ${{ steps.image.outputs.image_updated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.EK_GITHUB_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}
            ghcr.io/${{ github.repository }}:latest

      - name: Flag image update
        id: image
        run: echo "image_updated=true" >> $GITHUB_OUTPUT

  deploy-kubernetes:
    needs: [detect-changes, build-and-push-image]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode kubeconfig
        run: |
          echo "${{ secrets.kubecONFIG }}" | base64 --decode > kubeconfig
          chmod 600 kubeconfig

      - name: Rollout deployment (if image updated)
        if: needs.build-and-push-image.outputs.image_updated == 'true'
        run: |
          kubectl --kubeconfig=kubeconfig rollout restart deployment photovaul-client -n webapps

      - name: Apply manifest changes (if manifests updated)
        if: needs.detect-changes.outputs.manifests_changed == 'true'
        run: |
          kubectl --kubeconfig=kubeconfig apply -f k8s/
